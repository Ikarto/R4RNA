% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/double_line.R, R/single_line.R
\name{plotCovarianceMltpDoubleLine}
\alias{plotCovarianceMltpDoubleLine}
\alias{plotComparisonHelixMltpDoubleLine}
\alias{plotCovarianceComparisonMltpDoubleLine}
\alias{plotCovarianceDoubleMltpDoubleLine}
\alias{plotCovarianceMltpSingleLine}
\alias{plotCovarianceComparisonMltpSingleLine}
\alias{plotDoubleCovarianceComparisonMltpSingleLine}
\alias{plotCovarianceDoubleMltpSingleLine}
\title{Plot nucleotide sequence coloured by covariance}
\usage{
plotCovarianceMltpDoubleLine(
  helix,
  msa,
  comp.seq = FALSE,
  y = 0,
  msa.all.seq = FALSE,
  arcs = TRUE,
  top.name = "FALSE",
  sort = FALSE,
  conflict.cutoff = 0.01,
  stable = FALSE,
  grid = TRUE,
  dist.between = 0.1,
  dist.part = 0.2,
  add = FALSE,
  append = FALSE,
  pad = c(0, 0, 0, 0),
  shape = "circle",
  debug = FALSE,
  col = "black",
  conflict.col = NA,
  conflict.lty = 2,
  conflict.lwd = 1,
  base.colour = FALSE,
  palette = NA,
  text = TRUE,
  grid.col = "white",
  grid.lwd = 0,
  text.cex = 0.2,
  text.col = "gray",
  text.font = 2,
  text.family = "sans",
  species.cex = 0.2,
  species.col = "black",
  species.font = 2,
  species.family = "mono",
  species = 10,
  legend = TRUE,
  col.line = "black",
  col.arrow = "black",
  x = 0,
  ...
)

plotComparisonHelixMltpDoubleLine(
  helix1,
  helix2,
  scale = TRUE,
  top.name = "FALSE",
  sort = TRUE,
  dist.between = 0.1,
  dist.part = 0.2,
  dist.par.plot = 0.2,
  stable = FALSE,
  line = TRUE,
  arrow = TRUE,
  col.line = "black",
  col.arrow = "black",
  col = "black",
  shape = "circle",
  debug = FALSE,
  append = TRUE,
  add = FALSE,
  cols = NA,
  breaks = NA,
  log = FALSE,
  include.lowest = TRUE,
  ...
)

plotCovarianceComparisonMltpDoubleLine(
  helix1,
  helix2,
  msa,
  comp.seq = FALSE,
  y = 0,
  msa.all.seq = FALSE,
  arcs = TRUE,
  top.name = "FALSE",
  sort = FALSE,
  conflict.cutoff = 0.01,
  stable = FALSE,
  grid = TRUE,
  dist.between = 0.1,
  dist.part = 0.2,
  dist.par.plot = 0.2,
  add = FALSE,
  append = FALSE,
  pad = c(0, 0, 0, 0),
  shape = "circle",
  scale = FALSE,
  debug = FALSE,
  col = "black",
  base.colour = FALSE,
  palette = NA,
  text = TRUE,
  grid.col = "white",
  grid.lwd = 0,
  text.cex = 0.2,
  text.col = "gray",
  text.font = 2,
  text.family = "sans",
  species.cex = 0.2,
  species.col = "black",
  species.font = 2,
  species.family = "mono",
  species = 10,
  legend = TRUE,
  col.line = "black",
  col.arrow = "black",
  cols = NA,
  breaks = NA,
  log = FALSE,
  include.lowest = TRUE,
  ...
)

plotCovarianceDoubleMltpDoubleLine(
  helix.left,
  helix.right,
  msa.left,
  msa.right,
  comp.seq = FALSE,
  msa.all.seq = TRUE,
  arcs = TRUE,
  top.name = "FALSE",
  sort = FALSE,
  scale = FALSE,
  conflict.cutoff = 0.01,
  stable = FALSE,
  grid = TRUE,
  dist.between = 0.1,
  dist.part = 0.2,
  dist.par.plot = 0.2,
  add = FALSE,
  append = FALSE,
  pad = c(0, 0, 0, 0),
  shape = "circle",
  debug = FALSE,
  col = "black",
  conflict.col = "blue",
  conflict.lty = 2,
  conflict.lwd = 1,
  base.colour = FALSE,
  palette = NA,
  text = TRUE,
  grid.col = "white",
  grid.lwd = 0,
  text.cex = 0.2,
  text.col = "gray",
  text.font = 2,
  text.family = "sans",
  species.cex = 0.2,
  species.col = "black",
  species.font = 2,
  species.family = "mono",
  species = 10,
  legend = TRUE,
  col.line = "black",
  col.arrow = "black",
  ...
)

plotCovarianceMltpSingleLine(
  msa,
  helix,
  comp.seq = FALSE,
  top.name = "FALSE",
  sort = FALSE,
  arcs = TRUE,
  msa.all.seq = TRUE,
  conflict.cutoff = 0.01,
  stable = FALSE,
  y = 0,
  flip = FALSE,
  grid = TRUE,
  dist.between = 0.1,
  dist.part = 0.2,
  add = FALSE,
  pad = c(0, 0, 0, 0),
  shape = "circle",
  debug = FALSE,
  scale = FALSE,
  col = "black",
  conflict.col = NA,
  conflict.lty = 2,
  conflict.lwd = 1,
  base.colour = FALSE,
  palette = NA,
  text = TRUE,
  grid.col = "white",
  grid.lwd = 0,
  text.cex = 0.2,
  text.col = "gray",
  text.font = 2,
  text.family = "sans",
  species.cex = 0.2,
  species.col = "black",
  species.font = 2,
  species.family = "mono",
  species = 10,
  legend = FALSE,
  ...
)

plotCovarianceComparisonMltpSingleLine(
  msa,
  helix1,
  helix2,
  comp.seq = FALSE,
  top.name = "FALSE",
  sort = TRUE,
  arcs = TRUE,
  msa.all.seq = TRUE,
  conflict.cutoff = 0.01,
  stable = FALSE,
  y = 0,
  flip = FALSE,
  grid = TRUE,
  dist.between = 0.1,
  dist.part = 0.2,
  add = FALSE,
  pad = c(0, 0, 0, 0),
  shape = "circle",
  debug = FALSE,
  col = "black",
  base.colour = FALSE,
  palette = NA,
  text = TRUE,
  grid.col = "white",
  grid.lwd = 0,
  text.cex = 0.2,
  text.col = "gray",
  text.font = 2,
  text.family = "sans",
  species.cex = 0.2,
  species.col = "black",
  species.font = 2,
  species.family = "mono",
  species = 10,
  legend = TRUE,
  breaks = NA,
  cols = NA,
  log = FALSE,
  include.lowest = TRUE,
  scale = FALSE,
  line = FALSE,
  arrow = FALSE,
  ...
)

plotDoubleCovarianceComparisonMltpSingleLine(
  msa,
  helix1,
  helix2,
  comp.seq = FALSE,
  top.name = "FALSE",
  sort = TRUE,
  arcs = TRUE,
  msa.all.seq = TRUE,
  conflict.cutoff = 0.01,
  stable = FALSE,
  y = 0,
  flip = FALSE,
  grid = TRUE,
  dist.between = 0.1,
  dist.part = 0.2,
  add = FALSE,
  pad = c(0, 0, 0, 0),
  shape = "circle",
  debug = FALSE,
  col = "black",
  base.colour = FALSE,
  palette = NA,
  text = TRUE,
  grid.col = "white",
  grid.lwd = 0,
  text.cex = 0.2,
  text.col = "gray",
  text.font = 2,
  text.family = "sans",
  species.cex = 0.2,
  species.col = "black",
  species.font = 2,
  species.family = "mono",
  species = 10,
  legend = TRUE,
  breaks = NA,
  cols = NA,
  log = FALSE,
  include.lowest = TRUE,
  scale = FALSE,
  line = FALSE,
  arrow = FALSE,
  dist.y.between = 10,
  ...
)

plotCovarianceDoubleMltpSingleLine(
  helix1,
  helix2,
  msa1,
  msa2,
  comp.seq = FALSE,
  top.name = "FALSE",
  sort = FALSE,
  arcs = TRUE,
  msa.all.seq = TRUE,
  conflict.cutoff = 0.01,
  stable = FALSE,
  y = 0,
  flip = FALSE,
  grid = TRUE,
  dist.between = 0.1,
  dist.part = 0.2,
  add = FALSE,
  pad = c(0, 0, 0, 0),
  shape = "circle",
  debug = FALSE,
  col = "black",
  conflict.col = NA,
  conflict.lty = 2,
  conflict.lwd = 1,
  base.colour = FALSE,
  palette = NA,
  text = TRUE,
  grid.col = "white",
  grid.lwd = 0,
  text.cex = 0.2,
  text.col = "gray",
  text.font = 2,
  text.family = "sans",
  species.cex = 0.2,
  species.col = "black",
  species.font = 2,
  species.family = "mono",
  species = 10,
  legend = TRUE,
  dist.plot = 10,
  ...
)
}
\arguments{
\item{helix, helix1, helix2, helix.left, helix.right}{A helix data.table with a structure corresponding to entities in msa}

\item{msa, msa1, msa2, msa.left, msa.right}{Multiple sequence alignment as an array of named characters,
all of equal length. Typically output of readBstringSet. \code{msa.left} and \code{msa.right}
are specific to \code{helix.left} and \code{helix.right}. \code{msa1} and \code{msa2}
are specific to \code{helix1} and \code{helix2}}

\item{comp.seq}{Option to compare sequences from different entities by their "name" and provide
proper covariance colouring in future}

\item{y}{The vertical offset of the entire figure relative to 0.}

\item{msa.all.seq}{plot all sequences, if number of}

\item{arcs}{TRUE if the structure should be plotted as arcs. Arcs may be
styled with styling columns, see example and plotHelixMltp for details.}

\item{top.name}{Name of entity, which will be set as top name and will refer to first entity in plot}

\item{sort}{sort entities by alphabetic order}

\item{stable}{used to have same height of resulted plot, based on length of entities}

\item{grid}{TRUE if the multiple sequence alignment is to be drawn as a
grid of bases, else the multiple sequence alignment is drawn as equidistant horizontal lines.}

\item{dist.between}{distance between entities on y axes, dist.between*average length of entities}

\item{dist.part}{distance between entities, dist.part*average length of entities}

\item{append}{If TRUE, graphical elements are added to the active plot device,
else a new plot device is created for the plot.}

\item{pad}{A four integer array passed to blankPlot, specifies the
number of pixels to pad the bottom, left, top and right sides of the figure with, repsectively.}

\item{shape}{One of "circle", "triangle", or "square", specifying the shape of the arcs.}

\item{debug}{If TRUE, frames the boundaries of the intended plotting space
in red, used to determine if inputs produce expected output area.
Also outputs to STDIN dimensions of the plot.}

\item{col}{colour of arcs, if there is no style column in helix data.table sstructure}

\item{conflict.col, conflict.lty}{Determines the line type (style)
and colour to be used for conflicting basepairs. By default,
conflicting helices are drawn as dotted lines (lty = 2) and
whatever colour was originally assigned to it (col = NA).
Conflicting helices may be coloured by setting conflict.col to
some R-compatible colour name. If both arguments are set to NA,
then no attempt to exclude conflicting helices will be made when
colouring covariance plot columns, which in most cases will
render the plot nonsensical.}

\item{base.colour}{TRUE if bases are to be coloured by
nucleotide instead of basepair conservation.}

\item{palette}{A list of colour names to override the
default colour palette. When base.colour is TRUE, the first
6 colours will be used for colouring bases A, U, G, C, - (gap),
and ? (everything else), respectively. When base.colour is FALSE,
the first 7 colours will be used for colouring conserved basepairs,
covarying basepairs, one-sided conserved basepairs, invalid basepairs,
unpaired bases, gaps, and bases/pairs with ambiguous bases, resepctively.
If the palette is shorter than the expected length, the palette will
simply cycle. "NA" is a valid colour, that will effectively plot nothing.}

\item{text}{Only applicable when grid is TRUE.
TRUE if the grid is to be filled with nucleotide character.}

\item{grid.col, grid.lwd}{The colour and line width of the borders
displayed when grid is TRUE.}

\item{text.cex, text.col, text.font, text.family}{cex, col,
family and font for the text displayed via the text option. Use help("par")
for more information the paramters.}

\item{species.cex, species.col, species.font, species.family}{cex, col,
family and font for the species text displayed via the species option.
Use help("par") for more information the paramters.}

\item{species}{If a number greater than 0 is given,
then species names for the multiple sequence alignment
will be printed along the left side. This name is
typically the entire header lines of FASTA entries
from readFasta, and can be manually manipulated using
the names function. The number specifies the start
position relative to the left edge of the multiple sequence alignment).}

\item{legend}{TRUE if legend are to be shown.}

\item{col.line}{Colour of line, default is "black"}

\item{col.arrow}{Colour of arrow, default is "black"}

\item{scale}{If TRUE, inserts a scale on the plot.}

\item{dist.plot}{distance in pixels between two single line coavriances}
}
\description{
Given a multiple sequence alignment and a corresponding secondary structure,
nucleotides in the sequence alignment will be coloured according to the
basepairing and conservation status, where green is the most commonly
observed valid basepair in the column, dark blue being valid covariation
(i.e. mutation into another valid basepair), cyan is one-sided mutation that
retains the basepair, and red is a mutation where the basepair has been lost.
}
